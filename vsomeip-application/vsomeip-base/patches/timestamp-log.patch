/**
**  Created by Lukas Stahlbock in 2022
**  Copyright (c) 2022 IAV GmbH Ingenieurgesellschaft Auto und Verkehr. All rights reserved.
**
**  SPDX-License-Identifier: MPL-2.0
**  source repository: https://github.com/COVESA/vsomeip
**/
diff --git a/implementation/logger/src/message.cpp b/implementation/logger/src/message.cpp
index e4a902f..33afa07 100644
--- a/implementation/logger/src/message.cpp
+++ b/implementation/logger/src/message.cpp
@@ -31,7 +31,7 @@ message::message(level_e _level)
     : std::ostream(&buffer_),
       level_(_level) {
 
-    when_ = std::chrono::system_clock::now();
+    when_ = std::chrono::high_resolution_clock::now();
 }
 
 message::~message() {
@@ -74,9 +74,9 @@ message::~message() {
         };
 
         // Prepare time stamp
-        auto its_time_t = std::chrono::system_clock::to_time_t(when_);
+        auto its_time_t = std::chrono::high_resolution_clock::to_time_t(when_);
         auto its_time = std::localtime(&its_time_t);
-        auto its_ms = (when_.time_since_epoch().count() / 100) % 1000000;
+        auto its_ns = (when_.time_since_epoch().count()) % 1000000000;
 
         if (its_configuration->has_console_log()) {
 #ifndef ANDROID
@@ -87,7 +87,7 @@ message::~message() {
                 << std::dec << std::setw(2) << std::setfill('0') << its_time->tm_hour << ":"
                 << std::dec << std::setw(2) << std::setfill('0') << its_time->tm_min << ":"
                 << std::dec << std::setw(2) << std::setfill('0') << its_time->tm_sec << "."
-                << std::dec << std::setw(6) << std::setfill('0') << its_ms << " ["
+                << std::dec << std::setw(9) << std::setfill('0') << its_ns << " ["
                 << its_level << "] "
                 << buffer_.data_.str()
                 << std::endl;
@@ -129,7 +129,7 @@ message::~message() {
                     << std::dec << std::setw(2) << std::setfill('0') << its_time->tm_hour << ":"
                     << std::dec << std::setw(2) << std::setfill('0') << its_time->tm_min << ":"
                     << std::dec << std::setw(2) << std::setfill('0') << its_time->tm_sec << "."
-                    << std::dec << std::setw(6) << std::setfill('0') << its_ms << " ["
+                    << std::dec << std::setw(9) << std::setfill('0') << its_ns << " ["
                     << its_level << "] "
                     << buffer_.data_.str()
                     << std::endl;
